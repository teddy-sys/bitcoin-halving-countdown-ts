{"ast":null,"code":"export const getLastHalvingBlock = currentBlock => {\n  const blocksPerHalving = 210000;\n\n  // Calculate the number of complete halving periods\n  const halvingPeriods = Math.floor(currentBlock / blocksPerHalving);\n\n  // Calculate the last halving block\n  const lastHalvingBlock = halvingPeriods * blocksPerHalving;\n  return lastHalvingBlock;\n};\nexport const calculateNextHalvingDate = (currentBlockHeight, lastHalvingBlock, blocksPerHalving = 210000, blockIntervalMinutes = 10) => {\n  // Calculate the next halving block\n  const nextHalvingBlock = lastHalvingBlock + blocksPerHalving;\n\n  // Calculate the blocks remaining until the next halving\n  const blocksRemaining = nextHalvingBlock - currentBlockHeight;\n\n  // Calculate the time remaining in minutes\n  const timeRemainingMinutes = blocksRemaining * blockIntervalMinutes;\n\n  // Convert time remaining to days\n  const timeRemainingDays = timeRemainingMinutes / (60 * 24);\n\n  // Get the current date\n  const currentDate = new Date();\n\n  // Calculate the next halving date\n  const nextHalvingDate = new Date(currentDate.getTime() + timeRemainingDays * 24 * 60 * 60 * 1000);\n  return nextHalvingDate;\n};","map":{"version":3,"names":["getLastHalvingBlock","currentBlock","blocksPerHalving","halvingPeriods","Math","floor","lastHalvingBlock","calculateNextHalvingDate","currentBlockHeight","blockIntervalMinutes","nextHalvingBlock","blocksRemaining","timeRemainingMinutes","timeRemainingDays","currentDate","Date","nextHalvingDate","getTime"],"sources":["/home/teddy/Projects/bitcoin-halving-countdown/src/halvingCounter.tsx"],"sourcesContent":["export const getLastHalvingBlock = (currentBlock: number): number => {\n  const blocksPerHalving = 210000;\n  \n  // Calculate the number of complete halving periods\n  const halvingPeriods = Math.floor(currentBlock / blocksPerHalving);\n  \n  // Calculate the last halving block\n  const lastHalvingBlock = halvingPeriods * blocksPerHalving;\n  \n  return lastHalvingBlock;\n};\n\nexport const calculateNextHalvingDate = (\n  currentBlockHeight: number,\n  lastHalvingBlock: number,\n  blocksPerHalving: number = 210000,\n  blockIntervalMinutes: number = 10\n): Date => {\n  // Calculate the next halving block\n  const nextHalvingBlock = lastHalvingBlock + blocksPerHalving;\n  \n  // Calculate the blocks remaining until the next halving\n  const blocksRemaining = nextHalvingBlock - currentBlockHeight;\n  \n  // Calculate the time remaining in minutes\n  const timeRemainingMinutes = blocksRemaining * blockIntervalMinutes;\n  \n  // Convert time remaining to days\n  const timeRemainingDays = timeRemainingMinutes / (60 * 24);\n  \n  // Get the current date\n  const currentDate = new Date();\n  \n  // Calculate the next halving date\n  const nextHalvingDate = new Date(currentDate.getTime() + timeRemainingDays * 24 * 60 * 60 * 1000);\n  \n  return nextHalvingDate;\n};\n\n"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,YAAoB,IAAa;EACnE,MAAMC,gBAAgB,GAAG,MAAM;;EAE/B;EACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,GAAGC,gBAAgB,CAAC;;EAElE;EACA,MAAMI,gBAAgB,GAAGH,cAAc,GAAGD,gBAAgB;EAE1D,OAAOI,gBAAgB;AACzB,CAAC;AAED,OAAO,MAAMC,wBAAwB,GAAGA,CACtCC,kBAA0B,EAC1BF,gBAAwB,EACxBJ,gBAAwB,GAAG,MAAM,EACjCO,oBAA4B,GAAG,EAAE,KACxB;EACT;EACA,MAAMC,gBAAgB,GAAGJ,gBAAgB,GAAGJ,gBAAgB;;EAE5D;EACA,MAAMS,eAAe,GAAGD,gBAAgB,GAAGF,kBAAkB;;EAE7D;EACA,MAAMI,oBAAoB,GAAGD,eAAe,GAAGF,oBAAoB;;EAEnE;EACA,MAAMI,iBAAiB,GAAGD,oBAAoB,IAAI,EAAE,GAAG,EAAE,CAAC;;EAE1D;EACA,MAAME,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC;;EAE9B;EACA,MAAMC,eAAe,GAAG,IAAID,IAAI,CAACD,WAAW,CAACG,OAAO,CAAC,CAAC,GAAGJ,iBAAiB,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;EAEjG,OAAOG,eAAe;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}